#include <stdlib.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <time.h>
#include <errno.h>


int callerHandler(const char *program) {


    int pid = fork();
    int status = 0;
    if(-1 == pid) {
        perror("fork");
        exit(FAILURE);
    } else if(pid == 0) {

        if(-1 == execlp(program, program, NULL)) {
            perror("exec failed");
            exit(EXIT_FAILURE);
        } else {
            exit(EXIT_SUCCESS);
        }

    } else {
        wait(&status);
    }
    return WEXITSTATUS(status);

}

int main(int argc, char*argv[]){

   int status;

    for(int i = 1; i < argc; i++) {

        status = callerHandler(argv[i]);
        if(EXIT_SUCCESS == status) {
            return status;
        }
    }

    
    return EXIT_SUCCESS;
}